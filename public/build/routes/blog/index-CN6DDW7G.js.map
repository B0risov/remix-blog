{
  "version": 3,
  "sources": ["browser-route-module:/Users/matvej/dev/remix-blog/app/routes/blog/index.jsx?browser", "../../../../app/routes/blog/index.jsx"],
  "sourcesContent": ["export { default, links } from \"/Users/matvej/dev/remix-blog/app/routes/blog/index.jsx\";", "import { useEffect, useState } from 'react';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport blogStyles from '~/styles/blog.css';\nimport client from '~/contentfulConfig';\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: blogStyles }];\n}\n\nexport async function loader() {\n  const response1 = await client.getEntries({ content_type: 'Post1' });\n  const response2 = await client.getEntries({ content_type: 'Post2' });\n  const response3 = await client.getEntries({ content_type: 'Post3' });\n\n  const posts1 = response1.items.map((item) => ({\n    id: item.sys.id,\n    title: item.fields.title,\n    content: item.fields.content,\n  }));\n\n  const posts2 = response2.items.map((item) => ({\n    id: item.sys.id,\n    title: item.fields.title,\n    content: item.fields.content,\n  }));\n\n  const posts3 = response3.items.map((item) => ({\n    id: item.sys.id,\n    title: item.fields.title,\n    content: item.fields.content,\n  }));\n\n  const responseBgColor = await client.getEntries({ content_type: 'BackgroundColor', limit: 1 });\n  const backgroundColor = responseBgColor.items[0]?.fields.color || 'white'; // Set default color if not found\n\n  return {\n    posts1,\n    posts2,\n    posts3,\n    backgroundColor, // Include the background color in the returned data\n  };\n}\n\nexport default function Blog() {\n  const { posts1, posts2, posts3, backgroundColor } = useLoaderData();\n\n  useEffect(() => {\n    document.body.style.backgroundColor = backgroundColor; // Apply the background color to the body element\n  }, [backgroundColor]);\n\n  return (\n    <>\n      <div>\n        <h2>Posts 1</h2>\n        {posts1.map((post) => (\n          <div className=\"card\" key={post.id}>\n            <Link to={`/blog/posts/${post.id}`}>{post.title}</Link>\n          </div>\n        ))}\n      </div>\n      <div>\n        <h2>Posts 2</h2>\n        {posts2.map((post) => (\n          <div className=\"card\" key={post.id}>\n            <Link to={`/blog/posts/${post.id}`}>{post.title}</Link>\n          </div>\n        ))}\n      </div>\n      <div>\n        <h2>Posts 3</h2>\n        {posts3.map((post) => (\n          <div className=\"card\" key={post.id}>\n            <Link to={`/blog/posts/${post.id}`}>{post.title}</Link>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}"],
  "mappings": ";;;;;;;;;;;;;AAAA;;;ACAA;AAAA,mBAAoC;AAK7B,iBAAiB;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAqCtB,gBAAgB;AAC7B,QAAM,EAAE,QAAQ,QAAQ,QAAQ,oBAAoB;AAEpD,8BAAU,MAAM;AACd,aAAS,KAAK,MAAM,kBAAkB;AAAA,KACrC,CAAC;AAEJ,SACE,0DACE,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAI,YACH,OAAO,IAAI,CAAC,SACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAO,KAAK,KAAK;AAAA,KAC9B,oCAAC,MAAD;AAAA,IAAM,IAAI,eAAe,KAAK;AAAA,KAAO,KAAK,WAIhD,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAI,YACH,OAAO,IAAI,CAAC,SACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAO,KAAK,KAAK;AAAA,KAC9B,oCAAC,MAAD;AAAA,IAAM,IAAI,eAAe,KAAK;AAAA,KAAO,KAAK,WAIhD,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAI,YACH,OAAO,IAAI,CAAC,SACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAO,KAAK,KAAK;AAAA,KAC9B,oCAAC,MAAD;AAAA,IAAM,IAAI,eAAe,KAAK;AAAA,KAAO,KAAK;AAAA;",
  "names": []
}
